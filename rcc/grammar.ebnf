

program ::=
  (statement)*;

statement ::=
  global_definition || ...;

global_definition ::=
  DEF type ID literal;

type ::=
  simple_type ||
  # struct_type ||
  # array_type ||
  # auto_type ||
  ...; # (LCARROT ID (COMMA ID)* RCARROT)?;

simple_type ::=
  id;

id ::=
  (ID RES)* ID;

# expression ::=
#   literal ||
  # scoped_expression ||
  ...;

# scoped_expression ::=
#  LPAREN expression RPAREN;

literal ::=
  nat_literal ||
#  int_litaral ||
  ...;

nat_literal ::=
  NAT_LITERAL;

# int_litaral  ::= (PLUS | MINUS) nat_literal;



### Punctuation
SEMI = ";"
COMMA = ","
RES = "::"
LCARROT = "<"
RCARROT = ">"
LPAREN = "("
RPAREN = ")"

### Keywords
KW_MUT = "mut"
KW_CONST = "const"
KW_DEF = "def"

### Operators
ASSIGN = "="

### ID
ID = "[a-zA-Z]\w*"

### Literals
NAT_LITERAL = "0(\d|_)+"